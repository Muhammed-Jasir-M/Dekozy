on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

name: 'Build & Release'
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: 
          fetch-depth:  0

      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true

      - name: Create .env file
        run: |
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" > .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env

      - name: Install Dependencies
        run: flutter pub get

      - name: Update iOS Deployment Target
        run: |
          cat > ios/Podfile << 'EOL'
          platform :ios, '13.0'
          
          # CocoaPods analytics sends network stats synchronously affecting flutter build latency.
          ENV['COCOAPODS_DISABLE_STATS'] = 'true'
          
          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }
          
          def flutter_root
            generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
            unless File.exist?(generated_xcode_build_settings_path)
              raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
            end
          
            File.foreach(generated_xcode_build_settings_path) do |line|
              matches = line.match(/FLUTTER_ROOT\=(.*)/)
              return matches[1].strip if matches
            end
            raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
          end
          
          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
          
          target 'Runner' do
            use_frameworks!
            use_modular_headers!
          
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end
          
          post_install do |installer|
            installer.pods_project.targets.each do |target|
              flutter_additional_ios_build_settings(target)
              target.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
              end
            end
          end
          EOL

      - name: Build APK
        run: flutter build apk --release
      
      - name: Build IPA
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload
          zip -r app.ipa Payload

      - name: Extract version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Generate Tag Name
        id: tag
        run: |
          TAG="v${VERSION}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            TAG="${TAG}-build-${GITHUB_RUN_NUMBER}"
          fi
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          artifacts: |
            build/app/outputs/flutter-apk/app-release.apk
            build/ios/iphoneos/app.ipa
          tag: ${{ env.TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
      

      
      

      

      


      